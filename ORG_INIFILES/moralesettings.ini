
[MORALE_LOGGING]
ENABLED = 0


[MORALE_MIN_MAX]
MIN = 0
MAX = 100

[MORALE_LEVELS]
VERY_HIGH	= 80	 // so to be VERY_HIGH morale needs to be at least 80
HIGH		= 60
NORMAL		= 45
LOW		= 30
VERY_LOW	= 0

[CPU_MORALE]
DEFAULT_MORALE	= 50		// initial CPU player morale
BASE_MOD	= 0		// initial CPU player morale modifier (added to DEFAULT_MORALE)
PLAYER_RANK_MOD = 1.0		// mod on the effect of player rank on BASE_MOD (ex. 1.0 means NO effect, 2.0 means that player rank effect is doubled)


//
// TEAM PERFORMANCE
////////////////////////////////////////////////////////////////////////

[TEAM_PERFORMANCE_RATIOS]
LEAGUE_EXPECTATION = 90
LAST_MATCH = 10

[TEAM_EXPECTATION]
CLINCHED = 100
PROBABLE = 80
LIKELY = 65
POSSIBLE = 50
UNLIKELY = 20
IMPOSSIBLE = 0
EARLY_SEASON_PERCENT = 30

[TEAM_PERFORMANCE_LAST_MATCH_SLACK]
UPPER = 20					// SH - Amount Morale can go above or below 100 to give it memory of good bad team performance. Goes above MORALE_MIN_MAX/MAX by this much (but only MORALE_MIN_MAX/MAX counts towards total morale)
LOWER = 20					// Goes below MORALE_MIN_MAX/MIN by this much (but only MORALE_MIN_MAX/MIN counts towards total morale)

[TEAM_PERFORMANCE_LAST_MATCH_MATCH_IMPORTANCE_RANK]
LOW = 45					// Match is low importance if rating is 0 -> LOW
MEDIUM = 85					// Medium rating is LOW -> MEDIUM
HIGH = 100					// High rating is MEDIUM -> HIGH

[TEAM_PERFORMANCE_LAST_MATCH_WIN]
LOW = 2						// Happiness score for a low important win
MEDIUM = 5					// Happiness score for a medium important win
HIGH = 15					// Happiness score for a high important win

[TEAM_PERFORMANCE_LAST_MATCH_LOSS]
LOW = -5					// Happiness score for a low important loss
MEDIUM = -7					// Happiness score for a medium important loss
HIGH = -15					// Happiness score for a high important loss

[TEAM_PERFORMANCE_LAST_MATCH_DRAW]
LOW = -3					// Happiness score for a low important draw
MEDIUM = -1					// Happiness score for a medium important draw
HIGH = 1					// Happiness score for a high important draw

[CPU_TEAM_EXPECTATION]	// [Simon July 23, 2011] These were set to be much lower than human, no idea why. So FYI
CLINCHED = 100
PROBABLE = 80
LIKELY = 65
POSSIBLE = 50
UNLIKELY = 20
IMPOSSIBLE = 0

////////////////////////////////////////////////////////////////////////
// TEAM PERFORMANCE
//


//
// SQUAD ROLE
////////////////////////////////////////////////////////////////////////

[SQUAD_ROLE_RATIOS]
STARTING_GAME_EXPECTATION = 50
PLAY_TIME = 50

[SQUAD_ROLE_SEASON_END_CULLING]
REFERENCE = 50			// this is the value both morales (start11 and playtime) will gravitate towards after each season
STARTING11_CULL_RATIO = 20	// so after season end, start11morale = start11morale - (STARTING11_CULL_RATIO*(start11morale - REFERENCE) / 100)
PLAYTIME_CULL_RATIO = 20	// so after season end, playtimemorale = playtimemorale - (PLAYTIME_CULL_RATIO*(playtimemorale - REFERENCE) / 100)

[PLAYING_STARTING_POINT]
MIN_RAND = 60			// The lower value to start happiness at ( between MORALE_MIN_MAX/MIN and MORALE_MIN_MAX/MAX )
MAX_RAND = 70			// The upper value to start happiness at ( between MORALE_MIN_MAX/MIN and MORALE_MIN_MAX/MAX )

[GAME_PLAYED_HAPPINESS]		// Increase per game
FIRST_TEAM = 2.0		// First team
FIRST_TEAM_CHALL = 2.0		// ...for first team challenger
BENCH = 2.3			// ...for Bench player
BENCH_CHALL = 3.0		// ...for bench Challenger
RESERVES = 5.0			// ...for reserves

[GAME_BENCH_HAPPINESS]
FIRST_TEAM = -5.0		// Increase per game for being on bench, players get both this and the next section
FIRST_TEAM_CHALL = -3.0		// ...for first team challenger
BENCH = -2.0			// ...for Bench player
BENCH_CHALL = -1.0		// ...for bench Challenger
RESERVES = 2.0			// ...for reserves

[GAME_BENCH_UNHAPPINESS]
FIRST_TEAM = -7.0		// Decrease missed game (not on bench)
FIRST_TEAM_CHALL = -5.0		// ...for first team challenger
BENCH = -3.0			// ...for Bench player
BENCH_CHALL = -1.0		// ...for bench Challenger
RESERVES = -1.0			// ...for reserves

[MINS_PLAYED]				
				// LTV = Less than variance
				// MTV = More than variance
MINUTE_VARIANCE = 10		// Was 5. Time variance on playing time. SH - Each player has an expectation of how long they play. This number sets the number of mins per morale change. e.g. if 5 then for each 5 mins more or less they play than their expected, they get a boost or drop.

FIRST_TEAM_MIN = 25		// Range for expectation. SH - Mins of the match they expect to play.
FIRST_TEAM_MAX = 80
FIRST_TEAM_LTV = -1		// Was -3 Points awarded when playing less. SH - Change in morale if this player plays less than variance number per first_team_min value.
FIRST_TEAM_MTV = 1		// Points awarded when playing more
	
FIRST_TEAM_CHALL_MIN = 20 	// Range for expectation
FIRST_TEAM_CHALL_MAX = 80
FIRST_TEAM_CHALL_LTV = -1	// was -2 Points awarded when playing less
FIRST_TEAM_CHALL_MTV = 1	// Points awarded when playing more

BENCH_MIN = 15 			// Range for expectation
BENCH_MAX = 45
BENCH_LTV = -1			// was -1 Points awarded when playing less
BENCH_MTV = 0.5			// Points awarded when playing more

BENCH_CHALL_MIN = 10 		// Range for expectation
BENCH_CHALL_MAX = 45
BENCH_CHALL_LTV = -1		// was -1 Points awarded when playing less
BENCH_CHALL_MTV = 1		// Points awarded when playing more

RESERVE_MIN = 10 		// Range for expectation
RESERVE_MAX = 45
RESERVE_LTV = -1		// Points awarded when playing less
RESERVE_MTV = 1			// Points awarded when playing more

////////////////////////////////////////////////////////////////////////
// SQUAD ROLE
//


//
// CONTACT HAPPINESS
////////////////////////////////////////////////////////////////////////

[CONTRACT_HAPPINESS_RATIOS]
WAGE_RATIO = 66
CONTRACT_LENGTH_RATIO = 33

[EXPECTED_WAGE]
CURRENT_WAGE_MULTIPLIER = 1	// current wage bias
FUTURE_WAGE_MULTIPLIER = 2	// future wage bias

[FUTURE_WAGE_TIME_FRAME]
NUM_OF_YEARS = 2			// FB states 2-3 years

[EXPECTED_WAGE_DIFFERENCE]
NUM_RANGE = 13				// How many range values are in use
RANGE_1 = -50				//
RANGE_2 = -40
RANGE_3 = -30
RANGE_4 = -20
RANGE_5 = -10
RANGE_6 = -5
RANGE_7 = 0
RANGE_8 = 5		
RANGE_9 = 10
RANGE_10 = 20
RANGE_11 = 30
RANGE_12 = 40
RANGE_13 = 50

VALUE_1 = 0					// Happiness value associated with range
VALUE_2 = 5
VALUE_3 = 10
VALUE_4 = 20
VALUE_5 = 30
VALUE_6 = 40
VALUE_7 = 50
VALUE_8 = 55
VALUE_9 = 65
VALUE_10 = 77
VALUE_11 = 83
VALUE_12 = 91
VALUE_13 = 100

[EXPECTED_WAGE_PERFORMANCE_MOD]
PERFORMANCE_POINTS = 10		// # points > 50 to modify wage demand - this is not used now as Player Performance Morale has been cut

[CONTRACT_LENGTH]
NUM_RATING_RANGE = 5		// Number of range ratings 
PLAYER_RATING_RANGE_1 = 60	// 0 to PLAYER_RATING_RANGE_1 - 1
PLAYER_RATING_RANGE_2 = 70	// PLAYER_RATING_RANGE_1 to PLAYER_RATING_RANGE_2 - 1
PLAYER_RATING_RANGE_3 = 80  // PLAYER_RATING_RANGE_2 to PLAYER_RATING_RANGE_3 - 1
PLAYER_RATING_RANGE_4 = 90  // PLAYER_RATING_RANGE_3 to PLAYER_RATING_RANGE_4 - 1
PLAYER_RATING_RANGE_5 = 100	// PLAYER_RATING_RANGE_4 to PLAYER_RATING_RANGE_5 - 1

RANGE_1_SR25 = 3			// Star Rating below 2.5
RANGE_1_SR3 = 3				// Star Rating 2.5 to less than 3.0
RANGE_1_SR35 = 2			// Star Rating 3.0 to less than 3.5
RANGE_1_SR4 = 1				// Star Rating 3.5 to less than 4.0
RANGE_1_SR45 = 0			// Star Rating 4.0 to less than 4.5
RANGE_1_SR5 = 0				// Star Rating 4.5 to 5.0

RANGE_2_SR25 = 2
RANGE_2_SR3 = 3
RANGE_2_SR35 = 2
RANGE_2_SR4 = 1
RANGE_2_SR45 = 0
RANGE_2_SR5 = 0

RANGE_3_SR25 = 0
RANGE_3_SR3 = 2
RANGE_3_SR35 = 3
RANGE_3_SR4 = 3
RANGE_3_SR45 = 2
RANGE_3_SR5 = 1

RANGE_4_SR25 = 0
RANGE_4_SR3 = 1
RANGE_4_SR35 = 2
RANGE_4_SR4 = 3
RANGE_4_SR45 = 3
RANGE_4_SR5 = 3

RANGE_5_SR25 = 0
RANGE_5_SR3 = 0
RANGE_5_SR35 = 1
RANGE_5_SR4 = 2
RANGE_5_SR45 = 3
RANGE_5_SR5 = 3

[CONTRACT_LENGTH_AGE_MODIFIERS]
YOUNG = 18					// Players under are considered young
OLD = 38					// Players over are considered old
YOUNG_MOD = 1				// How much the above ratings are modded
OLD_MOD = -1				// for old and young players

[CONTRACT_LENGTH_TEAM_EXPECTATION_MODIFIERS]
CLINCHED = 2
PROBABLE = 1
LIKELY = 0
POSSIBLE = -1
UNLIKELY = -2
IMPOSSIBLE = -3

[CONTRACT_LENGTH_DIFF_HAPPINESS]
DIFF_RANGE = 11
RANGE_1 = -5
RANGE_2 = -4
RANGE_3 = -3
RANGE_4 = -2
RANGE_5 = -1
RANGE_6 = 0
RANGE_7 = 1
RANGE_8 = 2
RANGE_9 = 3
RANGE_10 = 4
RANGE_11 = 5

VALUE_1 = 0
VALUE_2 = 17
VALUE_3 = 32
VALUE_4 = 45
VALUE_5 = 56
VALUE_6 = 65
VALUE_7 = 56
VALUE_8 = 45
VALUE_9 = 32
VALUE_10 = 17
VALUE_11 = 0

////////////////////////////////////////////////////////////////////////
// CONTRACT HAPPINESS
//

//
// ADDON MORALE
////////////////////////////////////////////////////////////////////////

[ADDON_MORALE]
DEFAULT_VALUE = 0
RANGE_UPPER = 100
RANGE_LOWER = -100

////////////////////////////////////////////////////////////////////////
// ADDON MORALE
//


//
// TEAM CHEMISTRY
////////////////////////////////////////////////////////////////////////

[TEAM_CHEMISTRY_LEVEL]
LEVEL_1 = 20				// Chem values of 0 -> LEVEL_1
LEVEL_2 = 40				// Chem values of ( LEVEL_1 + 1 ) -> LEVEL_2
LEVEL_3 = 59				// Chem values of ( LEVEL_2 + 1 ) -> LEVEL_3
LEVEL_4 = 60				// Chem values of ( LEVEL_3 + 1 ) -> LEVEL_4
LEVEL_5 = 80				// Chem values of ( LEVEL_4 + 1 ) -> LEVEL_5
LEVEL_6 = 100				// Chem values of ( LEVEL_5 + 1 ) -> LEVEL_6

[TEAM_CHEMISTRY_WINNING_PERCENT_MOD]
LEVEL_1 = -30
LEVEL_2 = -20
LEVEL_3 = -10
LEVEL_4 = 0
LEVEL_5 = 15
LEVEL_6 = 25

[TEAM_CHEMISTRY_SELFISH]
TEAM_PERFORMANCE = 20
SQUAD_ROLE = 80
CONTRACT_HAPPINESS = 0

//this does not exist
[TEAM_CHEMISTRY_BIT_SELFISH]
TEAM_PERFORMANCE = 0
SQUAD_ROLE = 0
CONTRACT_HAPPINESS = 0

//this is the neutral category
[TEAM_CHEMISTRY_BIT_TEAM_PLAYER]
TEAM_PERFORMANCE = 50
SQUAD_ROLE = 50
CONTRACT_HAPPINESS = 0

[TEAM_CHEMISTRY_TEAM_PLAYER]
TEAM_PERFORMANCE = 80
SQUAD_ROLE = 20
CONTRACT_HAPPINESS = 0

////////////////////////////////////////////////////////////////////////
// TEAM CHEMISTRY
//