// Team Points Decision Data - used to generate wanted fee

[POINTS_VALUE]	// For generating a wanted fee between base and adjusted: percentage out of the signed difference (adjusted value - base value) that will be added to the base value
MIN = -50		// Percentage
MAX = 125	    // Percentage
// If base < adjusted MIN is applied for a low scored player (0 will leave it to the base value, negative values will go below base value)
// and MAX is applied for a high scored player (100 will leave it to the adjusted value, >100 will go above the adjusted value, between MIN and 100 will keep it between base and adjusted)
// If adjusted < base MIN is applied for a high scored player (0 will leave it to the base value, negative values will go above base value, since the difference is negative)
// and MAX is applied for a low scored player (100 will leave it to the adjusted value, >100 will go below the adjusted value, between MIN and 100 will keep it between adjusted and base, 100 being close to adjusted)
// VALUE    ......... BASE ......<...... ADJUSTED ......
//      MIN  -.........0..........50........100.......100+  MAX
// VALUE    ......... ADJUSTED ......<...... BASE ......
//     MAX  100+.........100........50.........0.......-   MIN
// When choosing values think only of one case i.e. base < adjusted, since the other case will be mirrored: so for MIN = -50 MAX = 125 
// - for base < adjusted low scored players will go 50% of diff below base, high scored will go 125% of diff (so above adjusted value)
// - for adjusted < base low scored players will go 25% below adjusted, high scored will go 50% of diff above base (-50 * negative difference will go positive)

[TIME_AT_CLUB_MONTHS]			
MONTH_1 = 3
MONTH_2	= 6		// Less than or equal to this value
MONTH_3	= 9	
MONTH_4	= 14
MONTH_5	= 18
MONTH_6	= 24
MONTH_7	= 28
MONTH_8 = 34
MONTH_9 = 38
MONTH_10 = 48	
MONTH_11 = 60	
MONTH_12 = 1000	// Big on purpose
		
SCORE_1	= -250		
SCORE_2	= -100	
SCORE_3	= -95
SCORE_4	= -85
SCORE_5	= -65
SCORE_6	= -50
SCORE_7 = -40
SCORE_8 = -30
SCORE_9	= 0	
SCORE_10 = 0
SCORE_11 = -25	
SCORE_12 = -75	

[SQUAD_SIZE]
SIZE_1 = 18
SIZE_2 = 20
SIZE_3 = 24
SIZE_4 = 30
SIZE_5 = 50	// Big on purpose

SCORE_1 = -100
SCORE_2 = -50
SCORE_3 = 0
SCORE_4 = 25
SCORE_5 = 45

[FUTURE]
DIFF_1 = 60
SCORE_1 = -300
DIFF_2 = 40
SCORE_2 = -250
DIFF_3 = 30
SCORE_3 = -200
DIFF_4 = 20
SCORE_4 = -150
DIFF_5 = 15
SCORE_5 = -100
DIFF_6 = 10
SCORE_6 = -30
DIFF_7 = 5
SCORE_7 = -10

[TEAM_OVERALL]
OVR_1  = 30
OVR_2  = 40
OVR_3  = 50
OVR_4  = 60
OVR_5  = 70
OVR_6  = 75
OVR_7  = 78
OVR_8  = 80
OVR_9  = 81
OVR_10 = 82
OVR_11 = 83
OVR_12 = 84
OVR_13 = 85
OVR_14 = 86
OVR_15 = 87
OVR_16 = 88
OVR_17 = 89
OVR_18 = 90	
OVR_19 = 92
OVR_20 = 100

SCORE_1 = 80
SCORE_2 = 70
SCORE_3 = 60
SCORE_4 = 50
SCORE_5 = 40
SCORE_6 = 30
SCORE_7 = 20
SCORE_8 = 10
SCORE_9 = -20
SCORE_10 = -20
SCORE_11 = -20
SCORE_12 = -20
SCORE_13 = -20
SCORE_14 = -20
SCORE_15 = -20
SCORE_16 = -20
SCORE_17 = -40
SCORE_18 = -50
SCORE_19 = -50
SCORE_20 = -75

[PLAYER_IN_POSITION]
LOW_SCORE = -75			// If the player is the best in the position this is the score he'd get if within the limit
HIGH_SCORE = 100		// If the player is the worst in the position this is the score he'd get if within the limit
LIMIT = 5				// Number of players we care about.

[TOTAL_POINTS_CAP]
MAX_POINTS = 125		// A score of 125 would have the team accept less than the base of the player, 100 would be accept the base value
MIN_POINTS = -100		// It would take the full adjusted value for the team to sell the player


// Team Points Decision Data - used to generate wanted fee



// Offered fee acceptance data
[WANTED_FEE]
MIN = 1000000			// The minimum fee used to use the min wanted fee table. 
MAX = 90000000			

[MAX_WANTED_TABLE_PERC]
NUM_VALS = 12
PERC_1 = 10000000		// ( Start very high ) Check is greater than or equal to this value
PERC_2 = 140
PERC_3 = 130
PERC_4 = 120
PERC_5 = 110
PERC_6 = 100
PERC_7 = 90
PERC_8 = 80
PERC_9 = 70
PERC_10 = 60
PERC_11 = 50
PERC_12 = -10000000		// Stupidly low on purpose

[MAX_WANTED_TABLE]
ACCEPT_INITIAL_1 = 100
COUNTER_INITIAL_1 = 0
REJECT_INITIAL_1 = 0

ACCEPT_COUNTER_1 = 100
COUNTER_COUNTER_1 = 0
REJECT_COUNTER_1 = 0

ACCEPT_INITIAL_2 = 100
COUNTER_INITIAL_2 = 0
REJECT_INITIAL_2 = 0

ACCEPT_COUNTER_2 = 100
COUNTER_COUNTER_2 = 0
REJECT_COUNTER_2 = 0

ACCEPT_INITIAL_3 = 100
COUNTER_INITIAL_3 = 0
REJECT_INITIAL_3 = 0

ACCEPT_COUNTER_3 = 100
COUNTER_COUNTER_3 = 0
REJECT_COUNTER_3 = 0

ACCEPT_INITIAL_4 = 90
COUNTER_INITIAL_4 = 10
REJECT_INITIAL_4 = 0

ACCEPT_COUNTER_4 = 90
COUNTER_COUNTER_4 = 10
REJECT_COUNTER_4 = 0

ACCEPT_INITIAL_5 = 75
COUNTER_INITIAL_5 = 25
REJECT_INITIAL_5 = 0

ACCEPT_COUNTER_5 = 80
COUNTER_COUNTER_5 = 20
REJECT_COUNTER_5 = 0

ACCEPT_INITIAL_6 = 40
COUNTER_INITIAL_6 = 60
REJECT_INITIAL_6 = 0

ACCEPT_COUNTER_6 = 60
COUNTER_COUNTER_6 = 40
REJECT_COUNTER_6 = 0

ACCEPT_INITIAL_7 = 20
COUNTER_INITIAL_7 = 80
REJECT_INITIAL_7 = 0

ACCEPT_COUNTER_7 = 35
COUNTER_COUNTER_7 = 65
REJECT_COUNTER_7 = 0

ACCEPT_INITIAL_8 = 10
COUNTER_INITIAL_8 = 90
REJECT_INITIAL_8 = 0

ACCEPT_COUNTER_8 = 15
COUNTER_COUNTER_8 = 85
REJECT_COUNTER_8 = 0

ACCEPT_INITIAL_9 = 0
COUNTER_INITIAL_9 = 100
REJECT_INITIAL_9 = 0

ACCEPT_COUNTER_9 = 0
COUNTER_COUNTER_9 = 100
REJECT_COUNTER_9 = 0

ACCEPT_INITIAL_10 = 0
COUNTER_INITIAL_10 = 80
REJECT_INITIAL_10 = 20

ACCEPT_COUNTER_10 = 0
COUNTER_COUNTER_10 = 80
REJECT_COUNTER_10 = 20

ACCEPT_INITIAL_11 = 0
COUNTER_INITIAL_11 = 0
REJECT_INITIAL_11 = 100

ACCEPT_COUNTER_11 = 0
COUNTER_COUNTER_11 = 0
REJECT_COUNTER_11 = 100

ACCEPT_INITIAL_12 = 0
COUNTER_INITIAL_12 = 0
REJECT_INITIAL_12 = 100

ACCEPT_COUNTER_12 = 0
COUNTER_COUNTER_12 = 0
REJECT_COUNTER_12 = 100

[MIN_WANTED_TABLE]
ACCEPT_INITIAL_1 = 100
COUNTER_INITIAL_1 = 0
REJECT_INITIAL_1 = 0

ACCEPT_COUNTER_1 = 100
COUNTER_COUNTER_1 = 0
REJECT_COUNTER_1 = 0

ACCEPT_INITIAL_2 = 100
COUNTER_INITIAL_2 = 0
REJECT_INITIAL_2 = 0

ACCEPT_COUNTER_2 = 100
COUNTER_COUNTER_2 = 0
REJECT_COUNTER_2 = 0

ACCEPT_INITIAL_3 = 100
COUNTER_INITIAL_3 = 0
REJECT_INITIAL_3 = 0

ACCEPT_COUNTER_3 = 100
COUNTER_COUNTER_3 = 0
REJECT_COUNTER_3 = 0

ACCEPT_INITIAL_4 = 100
COUNTER_INITIAL_4 = 0
REJECT_INITIAL_4 = 0

ACCEPT_COUNTER_4 = 100
COUNTER_COUNTER_4 = 0
REJECT_COUNTER_4 = 0

ACCEPT_INITIAL_5 = 100
COUNTER_INITIAL_5 = 0
REJECT_INITIAL_5 = 0

ACCEPT_COUNTER_5 = 90
COUNTER_COUNTER_5 = 10
REJECT_COUNTER_5 = 0

ACCEPT_INITIAL_6 = 70
COUNTER_INITIAL_6 = 30
REJECT_INITIAL_6 = 0

ACCEPT_COUNTER_6 = 80
COUNTER_COUNTER_6 = 20
REJECT_COUNTER_6 = 0

ACCEPT_INITIAL_7 = 40
COUNTER_INITIAL_7 = 60
REJECT_INITIAL_7 = 0

ACCEPT_COUNTER_7 = 50
COUNTER_COUNTER_7 = 50
REJECT_COUNTER_7 = 0

ACCEPT_INITIAL_8 = 20
COUNTER_INITIAL_8 = 80
REJECT_INITIAL_8 = 0

ACCEPT_COUNTER_8 = 30
COUNTER_COUNTER_8 = 70
REJECT_COUNTER_8 = 0

ACCEPT_INITIAL_9 = 10
COUNTER_INITIAL_9 = 75
REJECT_INITIAL_9 = 15

ACCEPT_COUNTER_9 = 15
COUNTER_COUNTER_9 = 70
REJECT_COUNTER_9 = 15

ACCEPT_INITIAL_10 = 10
COUNTER_INITIAL_10 = 75
REJECT_INITIAL_10 = 15

ACCEPT_COUNTER_10 = 10
COUNTER_COUNTER_10 = 75
REJECT_COUNTER_10 = 15

ACCEPT_INITIAL_11 = 0
COUNTER_INITIAL_11 = 0
REJECT_INITIAL_11 = 100

ACCEPT_COUNTER_11 = 0
COUNTER_COUNTER_11 = 0
REJECT_COUNTER_11 = 100

ACCEPT_INITIAL_12 = 0
COUNTER_INITIAL_12 = 0
REJECT_INITIAL_12 = 100

ACCEPT_COUNTER_12 = 0
COUNTER_COUNTER_12 = 0
REJECT_COUNTER_12 = 100

// Offered fee acceptance data
